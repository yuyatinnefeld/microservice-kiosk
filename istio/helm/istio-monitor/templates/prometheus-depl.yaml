apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/instance: prometheus
    app.kubernetes.io/version: {{ .Values.prometheus.version }}
    helm.sh/chart: prometheus-25.30.1
    app.kubernetes.io/part-of: prometheus
  name: prometheus
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.prometheus.replicas }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/name: prometheus
        app.kubernetes.io/instance: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus-server
          image: "{{ .Values.prometheus.prometheus_image }}"
          imagePullPolicy: "IfNotPresent"
          args:
            - --storage.tsdb.retention.time={{ .Values.prometheus.retention }}
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 0
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 15
      volumes:
        - name: config-volume
          configMap:
            name: prometheus
        - name: storage-volume
          emptyDir: {}
